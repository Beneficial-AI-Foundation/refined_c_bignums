---
description:
globs: *.v
alwaysApply: false
---

FOLLOW ALL THE RULES IN THIS FILE.
IF NO RULE APPLIES, STOP AND ASK FOR CLARIFICATION INSTEAD OF MAKING CHANGES.
NEVER CHANGE MORE THAN 2 LINES IN THE SAME COMMIT.
YOU ARE OVERCONFIDENT AND FAVOR INCORRECT BIG CHANGES INSTEAD OF INCREMENTAL CORRECT PROGRESS.


Follow these steps exactly to prove a Coq lemma.

1. Replace `Admitted.` with `Show. Qed.`
2. Run a tool to see if the lemma verifies.
3. If the proof verifies, remove `Show` and run the tool again to check it verifies. Stop.
4. If you get "Attempt to save an incomplete proof", this shows that you have made progress. Go to step 6.
5. If you get some other error, your most recent line must have been incorrect. Remove it.
6. Add exactly one line, just before `Show`, with what you think is the correct next step.
   It is important that `Show` is always just before `Qed`, so you can see what the unsolved goal is.
   You may have to move `Show` inside `-`, `+`, `--`, etc, depending on how nested the first unsolved goal is.
7. Go to step 2.


If you see:
```
Error: Expected a single focused goal but 0 goals are focused.
```
This means you have proved a subgoal under a bullet point and then tried to keep proving under that bullet point.
Delete exactly the line mentioned in the error message.
If the error persists, repeat the fix. You may have to make several commits, each deleting one line.



If you only see this and no other information:
```
Error:
 (in proof carry_update_preserves_binary): Attempt to save an incomplete proof
(there are remaining open goals).
```
This means you need to add a bullet point to enter a new subgoal.


If you see an error like
```
Error: Hnlt is already used.
```
Delete the proof at this line and afterwards.
Then start working line-by-line using the procedure at the top of this document.
